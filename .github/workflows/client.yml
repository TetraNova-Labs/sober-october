name: client CI + Image

on:
  push:
    paths:
      - "client/**"
      - ".github/workflows/client.yml"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  client-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    strategy:
      matrix:
        node-version: [24]
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - run: pnpm install
      - run: pnpm build
      - run: pnpm lint

  build-and-push:
    needs: client-ci
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - uses: actions/checkout@v4

      # ðŸ”½ NEW: force lowercase owner/repo and set IMAGE
      - name: Derive image name (lowercase)
        id: imagename
        shell: bash
        run: |
          OWNER_LC="${GITHUB_REPOSITORY_OWNER,,}"
          REPO="${GITHUB_REPOSITORY#*/}"
          REPO_LC="$(echo "$REPO" | tr '[:upper:]' '[:lower:]')"
          echo "IMAGE=ghcr.io/${OWNER_LC}/${REPO_LC}-client" >> $GITHUB_ENV
          echo "IMAGE=$IMAGE"

      - name: Set channel tag
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "CHANNEL_TAG=main" >> $GITHUB_ENV
          else
            echo "CHANNEL_TAG=feature" >> $GITHUB_ENV
          fi

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=sha,format=short,prefix=sha-
            type=raw,value=${{ env.CHANNEL_TAG }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ./client
          file: ./client/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE }}:buildcache,mode=max
          provenance: true
